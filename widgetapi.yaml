asyncapi: 2.5.0
info:
  title: Verona Inferfaces Specification "Widget"
  version: '0.1.0'
  description: This is one part of the [Verona Online Assessment Standards](https://verona-interfaces.github.io).
    All messages are sent via the postMessage function of the html page. The widget takes the page root of its parent
    as target (parent.window), and the application binds the function call to the iframe element of the widget.

    Most important, the message body carries as first parameter the operationId of the message.

    The html page MUST contain a script-tag with metadata. The syntax and structure of this data are described
    [here](https://verona-interfaces.github.io/intro/metadata.html).

  license:
    name: CC0-1.0
    url: http://creativecommons.org/publicdomain/zero/1.0/
  contact:
    name: Institute for Educational Quality Improvement (IQB)
    url: https://www.iqb.hu-berlin.de
    email: iqb-tbadev@hu-berlin.de

channels:
  vowReadyNotification:
    subscribe:
      operationId: vowReadyNotification
      summary: Ready Notification
      description: The widget announces that it's code is loaded and initialized so the communication can start.
      message:
        name: vowReadyNotification
        payload:
          type: object
          properties:
            metadata:
              type: string
              description: Via this property, the widget sends the stringified metadata object definied as json-ld in the header of the html file. See [here](https://verona-interfaces.github.io/intro/metadata.html) for more information.
          required:
            - metadata
          additionalProperties: false

  vowStartCommand:
    publish:
      operationId: vowStartCommand
      summary: Start Command
      description: The application sends execution parameters.
      message:
        name: vowStartCommand
        contentType: application/json
        payload:
          type: object
          properties:
            sessionId:
              $ref: "#/components/schemas/SessionIdString"
            parameters:
              type: array
              items:
                $ref: "#/components/schemas/Parameter"
            sharedParameters:
              type: array
              items:
                $ref: "#/components/schemas/SharedParameter"
            state:
              type: string
              format: byte
          required:
            - sessionId
          additionalProperties: false

  vowStateChangedNotification:
    subscribe:
      operationId: vowStateChangedNotification
      summary: State Changed Notification
      message:
        name: vowStateChangedNotification
        contentType: application/json
        payload:
          type: object
          properties:
            sessionId:
              $ref: "#/components/schemas/SessionIdString"
            timeStamp:
              type: string
              format: date-time
              description: Ensures, that later arriving states are ignored.
            sharedParameters:
              type: array
              items:
                $ref: "#/components/schemas/SharedParameter"
            state:
              type: string
              format: byte
          required:
            - sessionId
            - timeStamp
          additionalProperties: false

components:
  schemas:
    SessionIdString:
      description: The session id flags all communication. If a message has no or empty session id, it's not processed. The session id is unique and was generated by the application. Any simple algorithm would work. The session id helps to link the correct unit with the data of the message. Using the id of the editor hosting html element is less reliable, because the element could be reused with another unit.
      type: string
      example: 'idk8ur5jf9ru5jk'

    SharedParameter:
      type: object
      description: This object structure is used to share data between instances of the module. The host may collect all shared data 
        sent by modules and provide it to every module.
      properties:
        key:
          description: Identifier to find or set the shared parameter.
          type: string
          minLength: 2
        value:
          description: Value of the parameter.
          type: string
      required:
        - key
      example:
        {
          "key": "CODE_MODE",
          "value": "INSTRUCTIONS_ONLY"
        }

    Parameter:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
      additionalProperties: false